Elephantly\UserBundle\Entity\User:
    type: entity
    # repositoryClass: Doctrine\Tests\ORM\Mapping\UserRepository
    table: hermes_user
    # readOnly: true
    # indexes:
    #   name_index:
    #     columns: [ name ]
    id:
        id:
            type: integer
            generator:
                strategy: AUTO
    fields:
        username:
            type: string
            length: 250
        email:
            type: string
            length: 250
            unique: true
            nullable: false
        salt:
            type: string
            length: 250
            nullable: false
        password:
            type: string
            length: 250
            nullable: false
        confirmationToken:
            type: string
            length: 250
            nullable: false
        enabled:
            type: boolean
            options:
                default: 0
        accountNonExpired:
            type: boolean
            column_name: account_non_expired
            options:
                default: 0
        credentialsNonExpired:
            type: boolean
            column_name: credentials_non_expired
            options:
                default: 0
        accountNonLocked:
            type: boolean
            column_name: account_non_locked
            options:
                default: 0
        roles:
            type: json_array
        updatedAt:
            type: datetime
            column_name: updated_at
            gedmo:
                timestampable:
                    on: update
        createdAt:
            type: datetime
            column_name: created_at
            gedmo:
                timestampable:
                    on: create

    # manyToMany:
    #   roles:
    #     targetEntity: Role
    #     joinTable:
    #       name: hermes_user_role
    #       joinColumns:
    #         user_id:
    #           referencedColumnName: id
    #       inverseJoinColumns:
    #         role_id:
    #           referencedColumnName: id
    # lifecycleCallbacks:
    #   prePersist: [ doStuffOnPrePersist, doOtherStuffOnPrePersistToo ]
    #   postPersist: [ doStuffOnPostPersist ]
